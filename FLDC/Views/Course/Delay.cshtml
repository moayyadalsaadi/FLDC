@model Graduation_Project.Models.Applicant

@{
    ViewBag.Title = "Delay";
}
<br />
<div class="bg-light">
    <br />
    <h2 class="text-center">تأجيل الحجز</h2>
    <hr />
</div>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ApplicantId)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2 d-flex" })
            <div class="col-md-10">
                <input type="text" value="@Model.Name" class="form-control" readonly />
                @*@Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" }})*@
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SSN, htmlAttributes: new { @class = "control-label col-md-2 d-flex" })
            <div class="col-md-10">
                <input type="text" value="@Model.SSN" class="form-control" readonly />
                @*@Html.EditorFor(model => model.SSN, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.SSN, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.CourseId, htmlAttributes: new { @class = "control-label col-md-2 d-flex" })
            <div class="col-md-10">
                <input type="text" value="@Model.Course.Name" class="form-control" readonly />
                @*@Html.EditorFor(model => model.SSN, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.Course.Name, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @{
                DateTime courseStart = Convert.ToDateTime(Model.CourseStart);
                int days;
                days = DateTime.Now.Subtract(courseStart).Days;
                if (days <= 2)
                {
                    <span style="color:red">لا يمكن التأجيل قبل 48 ساعة من بداية البرنامج</span>                   
                }
            }            
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="تأجيل" class="btn btn-primary" />
            </div>
        </div>
    </div>
}
